generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model blogs {
  id         Int      @id @default(autoincrement())
  title      String
  content    String
  active     Boolean  @default(false)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
}

model campaigns {
  id         Int      @id @default(autoincrement())
  title      String
  content    String
  active     Boolean  @default(false)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
}

model cities {
  id         Int         @id @default(autoincrement())
  name       String
  created_at DateTime    @default(now()) @db.Timestamp(6)
  updated_at DateTime    @default(now()) @db.Timestamp(6)
  districts  districts[]
}

model clinics {
  id          Int       @id @default(autoincrement())
  clinic_name String
  address     String
  district_id Int       @default(12)
  approved    Boolean   @default(false)
  active      Boolean   @default(false)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  districts   districts @relation(fields: [district_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  doctors     doctors[]
}

model districts {
  id         Int       @id @default(autoincrement())
  name       String
  city_id    Int
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  clinics    clinics[]
  cities     cities    @relation(fields: [city_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model doctors {
  id         Int      @id @default(autoincrement())
  name       String
  clinic_id  Int
  approved   Boolean  @default(false)
  active     Boolean  @default(false)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  clinics    clinics  @relation(fields: [clinic_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  user_id      Int       @id @default(autoincrement())
  first_name   String    @db.VarChar(50)
  last_name    String    @db.VarChar(50)
  email        String    @db.VarChar(100)
  phone_number String?   @db.VarChar(20)
  birth_date   DateTime? @db.Date
  address      String?   @db.VarChar(200)
  created_at   DateTime? @default(now()) @db.Timestamp(6)
  updated_at   DateTime? @default(now()) @db.Timestamp(6)
}
